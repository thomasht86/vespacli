name: Cross-Platform build, test, and upload to TestPyPI

on:
  push:
    branches: [ main ]

jobs:
  prepare-binaries:
    runs-on: ubuntu-latest
    env:
      MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    outputs:
      asset-path: ${{ steps.set-bin-path.outputs.asset-path }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Download latest binaries
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_build.txt
          pip install -e .
          python utils/download_binaries.py

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: vespacli/go-binaries

  build-and-test:
    needs: prepare-binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-12, macos-14]
        python-version: ["3.10"] # Update or modify Python versions as needed
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: vespacli/go-binaries
      
      - name: Set permissions on all files in go-binaries
        run: |
          chmod -R +x vespacli/go-binaries/*
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test] requests 

      - name: Verify installation
        run: |
          vespa version

  build-and-upload:
    needs: [prepare-binaries, build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_build.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: vespacli/go-binaries
      
      - name: Set permissions on all files in go-binaries
        run: |
          chmod -R +x vespacli/go-binaries/*

      - name: Build 
        run: |
          python -m build
          
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload -r testpypi dist/* --non-interactive
